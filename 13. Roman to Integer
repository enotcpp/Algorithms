const int ZERO = [](){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    return 0;
}();

class Solution {
public:
    int romanToInt1(string_view s) 
    {
        unordered_map<char, int> m =
        {
            { 'I',  1    },
            { 'V',  5    },
            { 'X',  10   },
            { 'L',  50   },
            { 'C',  100  },
            { 'D',  500  },
            { 'M',  1000 }
        };
        
        int res = 0, cur = 0, prev = 0;

        for(int i = s.size() - 1; i >= 0; --i)
        {
            cur = m[s[i]];

            if(cur >= prev)
            {
                res += cur;

                prev = cur;
            }
            else
            {
                res -= cur;
            }
        }

        return res;
    }

    int romanToInt(string_view s)
    {
        int m['Z' + 1] = {};

        m['I'] = 1;
        m['V'] = 5;
        m['X'] = 10;
        m['L'] = 50;
        m['C'] = 100;
        m['D'] = 500;
        m['M'] = 1000;

        int res = m[s.back()];

        for(int i = s.size() - 2; i >= 0; --i)
        {
            if(m[s[i]] < m[s[i + 1]])
            {
                res -= m[s[i]];
            }
            else
            {
                res += m[s[i]];
            }
        }

        return res;   
    }
};
