class Solution {
public:
    int lengthOfLongestSubstring(string s) 
    {
        int size = int(s.size()), counter = bool(size);

        for(int i = 1, from = 0; i < size; ++i)
        {
            for(int j = from; j < i; ++j)
            {
                if(s[j] == s[i])
                {
                    from = j + 1;

                    break;
                }
            }

            counter = max(counter, 1 + i - from);
        }

        return counter;
    }

    int lengthOfLongestSubstring1(string s) 
    {
        int size = int(s.size()), answer = 0, i = 0, j = 0;

        unordered_set<char> us;

        while(i < size && j < size)
        {
            // try to extend the range [i, j]
            if(us.find(s[j]) == us.end())
            {
                us.insert(s[j]);

                ++j;

                answer = max(answer, j - i);
            }
            else
            {
                us.erase(s[i]);

                ++i;
            }
        }

        return answer;
    }  
};
