class Solution {
public:
    int firstMissingPositive(vector<int>& nums) 
    {
        int n = nums.size();
        
        // Move all non-positive integers to the end of the array
        int i = 0;
        while (i < n) {
            if (nums[i] <= 0) {
                swap(nums[i], nums[n - 1]);
                n--;
            } else {
                i++;
            }
        }
        
        // Mark visited indices
        for (i = 0; i < n; i++) {
            int j = abs(nums[i]) - 1;
            if (j < n && nums[j] > 0) {
                nums[j] = -nums[j];
            }
        }
        
        // Find the first missing positive integer
        for (i = 0; i < n; i++) {
            if (nums[i] > 0) {
                return i + 1;
            }
        }
        
        return n + 1;    
    }
};
