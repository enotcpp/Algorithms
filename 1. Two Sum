
class Solution {
public:
    vector<int> twoSum1(vector<int>& nums, int target) 
    {
        int size = int(nums.size()), count = 0;
        
        for(int i = 0; i < size; ++i)
        {
            for(int j = i + 1; j < size; ++j)
            {
                if(nums[i] + nums[j] == target)
                {
                    return {i, j};
                }
            }
        }
        
        return {-1, -1};
    }
    
    vector<int> twoSum(vector<int>& nums, int target) 
    {
        unordered_map<int, int> m;
        
        int size = int(nums.size());
        
        for(int i = 0; i < size; ++i)
        {
            auto search = m.find(target - nums[i]);
            
            if(search == m.end())
            {
                m[nums[i]] = i;  
            }
            else if(search->second != i)
            {
                return {i, search->second};
            }
        }
        
        return {-1, -1};
    }
};
